name: Build and Release Extension

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Update manifest version
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" manifest.json
        echo "Updated manifest version to $VERSION"

    - name: Create extension package
      run: |
        # Create directory for the package
        mkdir -p extension-build

        # Copy all necessary files
        cp manifest.json extension-build/
        cp -r scripts/ extension-build/
        cp -r popup/ extension-build/
        cp -r options/ extension-build/
        cp -r styles/ extension-build/
        cp -r config/ extension-build/
        cp -r rules/ extension-build/
        cp -r images/ extension-build/
        cp blocked.html extension-build/
        cp README.md extension-build/

        # Create the zip package
        cd extension-build
        zip -r "../CyberShield-Drain-v${{ steps.version.outputs.version }}.zip" .
        cd ..

        echo "Package created: CyberShield-Drain-v${{ steps.version.outputs.version }}.zip"

    - name: Verify package
      run: |
        PACKAGE_FILE="CyberShield-Drain-v${{ steps.version.outputs.version }}.zip"
        if [ ! -f "$PACKAGE_FILE" ]; then
          echo "Error: Package file not created"
          exit 1
        fi

        SIZE=$(ls -lh "$PACKAGE_FILE" | awk '{print $5}')
        echo "Package size: $SIZE"

        echo "Package contents:"
        unzip -l "$PACKAGE_FILE"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || format('v{0}', steps.version.outputs.version) }}
        name: Check v${{ steps.version.outputs.version }}
        body: |
          ## Check v${{ steps.version.outputs.version }}

          ### üõ°Ô∏è Check Extension

          **Installation Instructions:**
          1. Download the `CyberShield-Drain-v${{ steps.version.outputs.version }}.zip` file
          2. Extract the ZIP file to a folder
          3. Open Chrome and go to `chrome://extensions/`
          4. Enable "Developer mode"
          5. Click "Load unpacked" and select the extracted folder

          ### Features:
          - Real-time phishing detection for Microsoft 365 login pages
          - Enterprise policy support (GPO/Intune)
          - Customizable branding and configuration
          - Comprehensive logging and monitoring
          - Modern Manifest V3 architecture

          ### Requirements:
          - Chrome/Chromium browser (version 88+)
          - Manifest V3 support

          Built by **CyberDrain** | Released on $(date '+%Y-%m-%d')
        files: |
          CyberShield-Drain-v${{ steps.version.outputs.version }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: extension-v${{ steps.version.outputs.version }}
        path: CyberShield-Drain-v${{ steps.version.outputs.version }}.zip
        retention-days: 90
